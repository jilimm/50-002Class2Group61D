//THIS MODULE COUNTS THE NUMBER OF BUTTON PRESSES YOU MAKE
//IT WILL BE USED TO EABLE US TO START OUT GAME WITH ANY BUTTON PRESS
module bcounter (
    input clk,       // clock
    input rst,       // reset
    input button,    // button input
    input button2,
    input button3,
    output count[8]  // press counter
  ) {
  
  .clk(clk) {
    
    button_conditioner button_cond;     // button input conditioner
    button_conditioner button_cond2;     // button input reset_conditioner
    button_conditioner button_cond3;     // button input conditioner
    .rst(rst) {
      dff ctr[8]; // our lovely counter
      counter edge_ctr(#SIZE(1),#DIV(22)); //detect edge every ~0.16sec
      dff left[1];
      dff right[1];
      dff cent[1];
    }
  }
  .clk(edge_ctr.value){
    edge_detector edge_detector(#RISE(1), #FALL(0)); // detect rising edges
    edge_detector edge_detector2(#RISE(1), #FALL(0)); // detect rising edges
    edge_detector edge_detector3(#RISE(1), #FALL(0)); // detect rising edges
    .rst(rst) {
    }
  }
  
  always {
    //propagate should have a dff counter somewhere where i can refer to.
    button_cond.in = button;            // raw button input
    edge_detector.in = button_cond.out; // input to the edge_detector
    button_cond2.in = button2;            
    edge_detector2.in = button_cond2.out; 
    button_cond3.in = button3;            
    edge_detector3.in = button_cond3.out; 
    count = ctr.q;                      
    
    //left.d/cent.d/right.d records whether the button is being pressed
    if(edge_detector.out){
       left.d = 1;
      }
    if(edge_detector2.out){
       cent.d = 1;
      }
    if(edge_detector3.out){
       right.d = 1;
      }
    
    if(edge_ctr.value){ 
      //adds button input to the existing counter value
      //eg if ctr is now 4 and you press left and right button, ctr.d = 4+1+1
      ctr.d = ctr.q + left.q + right.q + cent.q; 
      
      //suppose to reset but doesnt really do its job
      left.d =0;
      right.d=0;
      cent.d=0;
      }
    
  }
}